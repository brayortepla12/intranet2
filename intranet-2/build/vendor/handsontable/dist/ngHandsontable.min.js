document.all&&!document.addEventListener&&(document.createElement("hot-table"),document.createElement("hot-column"),document.createElement("hot-autocomplete")),angular.module("ngHandsontable.services",[]),angular.module("ngHandsontable.directives",[]),angular.module("ngHandsontable",["ngHandsontable.services","ngHandsontable.directives"]),Handsontable.hooks.add("afterContextMenuShow",function(){Handsontable.eventManager.isHotTableEnv=!1}),function(){function t(t){return{parseAutoComplete:function(e,n,o){e.source=function(a,i){var s=this.instance.getSelected()[0],r=[],c=n[s];if(c){var l=e.optionList;if(l&&l.object){if(angular.isArray(l.object))r=l.object;else{var u=t(l.object)(c);if(angular.isArray(u))if(o)for(var g=0,d=u.length;g<d;g++){var h=u[g][l.property];null!==h&&void 0!==h&&r.push(h)}else r=u;else r=u}i(r)}}}}}}t.$inject=["$parse"],angular.module("ngHandsontable.services").factory("autoCompleteFactory",t)}(),function(){function t(){var t={};return{getInstance:function(e){return t[e]},registerInstance:function(e,n){t[e]=n},removeInstance:function(e){t[e]=void 0}}}t.$inject=[],angular.module("ngHandsontable.services").factory("hotRegisterer",t)}(),function(){function t(t){return t.replace(/[A-Z]/g,function(t){return"-"+t.charAt(0).toLowerCase()})}function e(t){return t.substr(0,1).toUpperCase()+t.substr(1,t.length-1)}function n(n){return{containerClassName:"handsontable-container",initializeHandsontable:function(t,e){var o,a=document.createElement("div");return a.className=this.containerClassName,e.hotId&&(a.id=e.hotId),t[0].appendChild(a),o=new Handsontable(a,e),e.hotId&&n.registerInstance(e.hotId,o),o},updateHandsontableSettings:function(t,e){t&&t.updateSettings(e)},renderHandsontable:function(t){t&&t.render()},mergeSettingsFromScope:function(t,e){var n,o,a,i=angular.extend({},e);for(t=t||{},angular.extend(i,e.settings||{}),o=0,a=(n=this.getAvailableSettings()).length;o<a;o++)void 0!==i[n[o]]&&(t[n[o]]=i[n[o]]);return t},mergeHooksFromScope:function(t,n){var o,a,i,s,r=angular.extend({},n);for(t=t||{},angular.extend(r,n.settings||{}),a=0,i=(o=this.getAvailableHooks()).length;a<i;a++)s="on"+e(o[a]),"function"!=typeof r[o[a]]&&"function"!=typeof r[s]||(t[o[a]]=r[o[a]]||r[s]);return t},trimScopeDefinitionAccordingToAttrs:function(t,e){for(var n in t)t.hasOwnProperty(n)&&void 0===e[n]&&void 0===e[t[n].substr(1,t[n].length)]&&delete t[n];return t},getTableScopeDefinition:function(){var t={};return this.applyAvailableSettingsScopeDef(t),this.applyAvailableHooksScopeDef(t),t.datarows="=",t.dataschema="=",t.observeDomVisibility="=",t},getColumnScopeDefinition:function(){var t={};return this.applyAvailableSettingsScopeDef(t),t.data="@",t},applyAvailableSettingsScopeDef:function(t){var e,n,o;for(n=0,o=(e=this.getAvailableSettings()).length;n<o;n++)t[e[n]]="=";return t},applyAvailableHooksScopeDef:function(t){var n,o,a;for(o=0,a=(n=this.getAvailableHooks()).length;o<a;o++)t[n[o]]="=on"+e(n[o]);return t},getAvailableSettings:function(e){var n=Object.keys(Handsontable.DefaultSettings.prototype);return-1===n.indexOf("contextMenuCopyPaste")&&n.push("contextMenuCopyPaste"),-1===n.indexOf("handsontable")&&n.push("handsontable"),n.indexOf("settings")>=0&&n.splice(n.indexOf("settings"),1),e&&(n=n.map(t)),n},getAvailableHooks:function(e){var n=Handsontable.hooks.getRegistered();return e&&(n=n.map(function(e){return"on-"+t(e)})),n}}}n.$inject=["hotRegisterer"],angular.module("ngHandsontable.services").factory("settingFactory",n)}(),function(){function t(){return{restrict:"EA",scope:!0,require:"^hotColumn",link:function(t,e,n,o){var a=n.datarows;o.setColumnOptionList(a)}}}t.$inject=[],angular.module("ngHandsontable.directives").directive("hotAutocomplete",t)}(),function(){function t(t){return{restrict:"EA",require:"^hotTable",scope:{},controller:["$scope",function(t){this.setColumnOptionList=function(e){t.column||(t.column={});var n={},o=e.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)\s*$/);o?(n.property=o[1],n.object=o[2]):n.object=e.split(","),t.column.optionList=n}}],compile:function(e,n){var o=this;return this.scope=t.trimScopeDefinitionAccordingToAttrs(t.getColumnScopeDefinition(),n),angular.forEach(Object.keys(this.scope),function(t){o.$$isolateBindings[t]={attrName:t,collection:!1,mode:"data"===t?"@":"=",optional:!1}}),function(e,n,o,a){var i={};angular.forEach(Object.keys(o),function(t){"$"!==t.charAt(0)&&""===o[t]&&(i[t]=!0)}),t.mergeSettingsFromScope(i,e),e.column||(e.column={}),angular.extend(e.column,i),a.setColumnSetting(e.column),e.$on("$destroy",function(){a.removeColumnSetting(e.column)})}}}}t.$inject=["settingFactory"],angular.module("ngHandsontable.directives").directive("hotColumn",t)}(),function(){function t(t,e,n,o){return{restrict:"EA",scope:{},priority:-400,controller:["$scope",function(e){this.setColumnSetting=function(n){e.htSettings||(e.htSettings={}),e.htSettings.columns||(e.htSettings.columns=[]),e.htSettings.columns.push(n),t.updateHandsontableSettings(e.hotInstance,e.htSettings)},this.removeColumnSetting=function(n){e.htSettings.columns.indexOf(n)>-1&&(e.htSettings.columns.splice(e.htSettings.columns.indexOf(n),1),t.updateHandsontableSettings(e.hotInstance,e.htSettings))}}],compile:function(a,i){var s,r=this;return this.scope=t.trimScopeDefinitionAccordingToAttrs(t.getTableScopeDefinition(),i),s=Object.keys(this.scope),angular.forEach(s,function(t){var e=r.scope[t].charAt(0);r.$$isolateBindings[t]={attrName:r.scope[t].length>1?r.scope[t].substr(1,r.scope[t].length):t,collection:"datarows"===t,mode:e,optional:!1}}),function(a,i,r){if(a.settings=o(r.settings)(a.$parent),a.htSettings||(a.htSettings={}),angular.forEach(Object.keys(r),function(t){"$"!==t.charAt(0)&&""===r[t]&&(a.htSettings[t]=!0)}),t.mergeSettingsFromScope(a.htSettings,a),t.mergeHooksFromScope(a.htSettings,a),a.htSettings.data||(a.htSettings.data=a.datarows),a.htSettings.dataSchema=a.dataschema,a.htSettings.hotId=r.hotId,a.htSettings.observeDOMVisibility=a.observeDomVisibility,a.htSettings.columns)for(var c=0,l=a.htSettings.columns.length;c<l;c++){var u=a.htSettings.columns[c];if("autocomplete"===u.type&&u.optionList){if("string"==typeof u.optionList){var g={},d=u.optionList.match(/^\s*([\s\S]+?)\s+in\s+([\s\S]+?)\s*$/);d?(g.property=d[1],g.object=d[2]):g.object=g,u.optionList=g}e.parseAutoComplete(u,a.datarows,!0)}}var h=a.htSettings.afterChange;a.htSettings.afterChange=function(){h&&h.apply(this,arguments),n.$$phase||a.$apply()},a.hotInstance=t.initializeHandsontable(i,a.htSettings),angular.forEach(s,function(e){a.$watch(e,function(n,o){void 0!==n&&("datarows"===e?a.hotInstance.getSettings().data===n?t.renderHandsontable(a.hotInstance):(a.hotInstance.loadData(n),a.htSettings.data=n):n!==o&&(a.htSettings[e]=n,t.updateHandsontableSettings(a.hotInstance,a.htSettings)))},["datarows","columns","rowHeights","colWidths","rowHeaders","colHeaders"].indexOf(e)>=0)}),a.$watch("datarows",function(t){void 0!==t&&a.hotInstance.getSettings().data!==t&&a.hotInstance.loadData(t)}),a.$watchCollection("datarows",function(e,n){n&&n.length===a.htSettings.minSpareRows&&e.length!==a.htSettings.minSpareRows&&(a.htSettings.data=a.datarows,t.updateHandsontableSettings(a.hotInstance,a.htSettings))})}}}}t.$inject=["settingFactory","autoCompleteFactory","$rootScope","$parse"],angular.module("ngHandsontable.directives").directive("hotTable",t)}();